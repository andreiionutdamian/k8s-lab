#########################
###       Redis       ###
#########################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: basic-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: basic-test-app-secrets
              key: redis-password
        args: ["--requirepass", "$(REDIS_PASSWORD)"]        
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-storage
          mountPath: /data
      volumes:
      - name: redis-storage
        emptyDir: {}        
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: basic-postgres
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
---
#########################
###       App         ###
#########################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: basic-test-py
  namespace: basic-postgres
spec:
  replicas: 4
  selector:
    matchLabels:
      run: basic-test-py
  template:
    metadata:
      labels:
        run: basic-test-py
    spec:
      containers:
      - name: test-py-container
        image: aidamian/basic_test_fastapi        
        ports:
        - containerPort: 5050
          protocol: TCP
        # enviroment variables
        env:
        - name: PORT
          value: "5050"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: basic-test-app-secrets
              key: redis-password
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: basic-test-app-secrets
              key: postgres-password
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: basic-test-app-secrets
              key: postgres-user
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: basic-test-app-secrets
              key: postgres-db
---
apiVersion: v1
kind: Service
metadata:
  name: basic-test-py-svc
  namespace: basic-postgres
spec:
  type: ClusterIP
  selector:
    run: basic-test-py
  ports:
    - protocol: TCP
      port: 5050
      targetPort: 5050      
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: basic-test-py-ingress
  namespace: basic-postgres
  annotations:
    # next part is a bit tricky, but it works
    # if rewrite-target is used simply with / then
    # the path no matter how long will be rewritten to /
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2 
spec:
  rules:
  - http:
      paths:
      - path: /pg_test(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: basic-test-py-svc
            port:
              number: 5050
#########################
###       Postgres    ###
#########################
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pg-nfs-pv
  namespace: basic-postgres
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.1.56  
    path: "/srv/nfs/k8s/demo-ai-app"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pg-nfs-pvc
  namespace: basic-postgres
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  volumeName: pg-nfs-pv
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: basic-postgres
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:13
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: basic-test-app-secrets
              key: postgres-password
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: basic-test-app-secrets
              key: postgres-user
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: basic-test-app-secrets
              key: postgres-db
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: pg-nfs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: basic-postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres